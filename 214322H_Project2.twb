<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Cleansed_Health Insurance Coverage' inline='true' name='federated.08op10u1915eay1cpncj21cpjrhu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cleansed_Health Insurance Coverage' name='textscan.12cm3sm025b0aj17acvti0rfz5u0'>
            <connection class='textscan' directory='D:/ITBW41-Predictive_Analytics_Project/Project/Datasets/Cleaned_Dataset' filename='Cleansed_Health Insurance Coverage.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.12cm3sm025b0aj17acvti0rfz5u0' name='Cleansed_Health Insurance Coverage.csv' table='[Cleansed_Health Insurance Coverage#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='Uninsured Rate (2010)' ordinal='1' />
            <column datatype='real' name='Uninsured Rate (2015)' ordinal='2' />
            <column datatype='real' name='Uninsured Rate Change (2010-2015)' ordinal='3' />
            <column datatype='integer' name='Health Insurance Coverage Change (2010-2015)' ordinal='4' />
            <column datatype='integer' name='Employer Health Insurance Coverage (2015)' ordinal='5' />
            <column datatype='integer' name='Marketplace Health Insurance Coverage (2016)' ordinal='6' />
            <column datatype='integer' name='Marketplace Tax Credits (2016)' ordinal='7' />
            <column datatype='real' name='Average Monthly Tax Credit (2016)' ordinal='8' />
            <column datatype='boolean' name='State Medicaid Expansion (2016)' ordinal='9' />
            <column datatype='integer' name='Medicaid Enrollment (2013)' ordinal='10' />
            <column datatype='integer' name='Medicaid Enrollment (2016)' ordinal='11' />
            <column datatype='integer' name='Medicaid Enrollment Change (2013-2016)' ordinal='12' />
            <column datatype='integer' name='Medicare Enrollment (2016)' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.12cm3sm025b0aj17acvti0rfz5u0' name='Cleansed_Health Insurance Coverage.csv' table='[Cleansed_Health Insurance Coverage#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='Uninsured Rate (2010)' ordinal='1' />
            <column datatype='real' name='Uninsured Rate (2015)' ordinal='2' />
            <column datatype='real' name='Uninsured Rate Change (2010-2015)' ordinal='3' />
            <column datatype='integer' name='Health Insurance Coverage Change (2010-2015)' ordinal='4' />
            <column datatype='integer' name='Employer Health Insurance Coverage (2015)' ordinal='5' />
            <column datatype='integer' name='Marketplace Health Insurance Coverage (2016)' ordinal='6' />
            <column datatype='integer' name='Marketplace Tax Credits (2016)' ordinal='7' />
            <column datatype='real' name='Average Monthly Tax Credit (2016)' ordinal='8' />
            <column datatype='boolean' name='State Medicaid Expansion (2016)' ordinal='9' />
            <column datatype='integer' name='Medicaid Enrollment (2013)' ordinal='10' />
            <column datatype='integer' name='Medicaid Enrollment (2016)' ordinal='11' />
            <column datatype='integer' name='Medicaid Enrollment Change (2013-2016)' ordinal='12' />
            <column datatype='integer' name='Medicare Enrollment (2016)' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Uninsured Rate (2010)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Uninsured Rate (2010)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>Uninsured Rate (2010)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Uninsured Rate (2015)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Uninsured Rate (2015)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>Uninsured Rate (2015)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Uninsured Rate Change (2010-2015)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Uninsured Rate Change (2010-2015)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>Uninsured Rate Change (2010-2015)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Insurance Coverage Change (2010-2015)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Insurance Coverage Change (2010-2015)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>Health Insurance Coverage Change (2010-2015)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employer Health Insurance Coverage (2015)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Employer Health Insurance Coverage (2015)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>Employer Health Insurance Coverage (2015)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketplace Health Insurance Coverage (2016)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Marketplace Health Insurance Coverage (2016)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>Marketplace Health Insurance Coverage (2016)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketplace Tax Credits (2016)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Marketplace Tax Credits (2016)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>Marketplace Tax Credits (2016)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Monthly Tax Credit (2016)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Monthly Tax Credit (2016)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>Average Monthly Tax Credit (2016)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Medicaid Expansion (2016)</remote-name>
            <remote-type>11</remote-type>
            <local-name>[State Medicaid Expansion (2016)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>State Medicaid Expansion (2016)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medicaid Enrollment (2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Medicaid Enrollment (2013)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>Medicaid Enrollment (2013)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medicaid Enrollment (2016)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Medicaid Enrollment (2016)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>Medicaid Enrollment (2016)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medicaid Enrollment Change (2013-2016)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Medicaid Enrollment Change (2013-2016)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>Medicaid Enrollment Change (2013-2016)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medicare Enrollment (2016)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Medicare Enrollment (2016)]</local-name>
            <parent-name>[Cleansed_Health Insurance Coverage.csv]</parent-name>
            <remote-alias>Medicare Enrollment (2016)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Cleansed_Health Insurance Coverage.csv' datatype='table' name='[__tableau_internal_object_id__].[Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7]' role='measure' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#b9203e'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#bc243f'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#be283f'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#c12c40'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#c33040'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#c53441'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#c83742'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ca3a42'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#cc3e43'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#ce4143'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#d04444'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#d34745'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d74d46'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#da5146'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#dc5447'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#de5747'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#e05a48'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#e25d48'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#e46048'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#e66449'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e76749'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#e96a49'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#eb6e49'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#ed7149'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#ee744a'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#f0774a'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f17a4a'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#f37d4a'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f4c960'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f4cd63'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#f5814a'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f5be59'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#f5c25b'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f5c55e'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f6844b'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#f6ba57'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f7884b'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#f7b254'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f7b656'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f88b4c'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#f8aa51'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f8ae52'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f9a650'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#fa8f4d'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fa9f4f'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#faa24f'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#fb934d'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#fb974e'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fb9b4e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Cleansed_Health Insurance Coverage.csv' id='Cleansed_Health Insurance Coverage.csv_196869201D5D42198CD63878ECDABED7'>
            <properties context=''>
              <relation connection='textscan.12cm3sm025b0aj17acvti0rfz5u0' name='Cleansed_Health Insurance Coverage.csv' table='[Cleansed_Health Insurance Coverage#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='real' name='Uninsured Rate (2010)' ordinal='1' />
                  <column datatype='real' name='Uninsured Rate (2015)' ordinal='2' />
                  <column datatype='real' name='Uninsured Rate Change (2010-2015)' ordinal='3' />
                  <column datatype='integer' name='Health Insurance Coverage Change (2010-2015)' ordinal='4' />
                  <column datatype='integer' name='Employer Health Insurance Coverage (2015)' ordinal='5' />
                  <column datatype='integer' name='Marketplace Health Insurance Coverage (2016)' ordinal='6' />
                  <column datatype='integer' name='Marketplace Tax Credits (2016)' ordinal='7' />
                  <column datatype='real' name='Average Monthly Tax Credit (2016)' ordinal='8' />
                  <column datatype='boolean' name='State Medicaid Expansion (2016)' ordinal='9' />
                  <column datatype='integer' name='Medicaid Enrollment (2013)' ordinal='10' />
                  <column datatype='integer' name='Medicaid Enrollment (2016)' ordinal='11' />
                  <column datatype='integer' name='Medicaid Enrollment Change (2013-2016)' ordinal='12' />
                  <column datatype='integer' name='Medicare Enrollment (2016)' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.08op10u1915eay1cpncj21cpjrhu'>
      <datasources>
        <datasource caption='Cleansed_Health Insurance Coverage' name='federated.08op10u1915eay1cpncj21cpjrhu' />
      </datasources>
      <datasource-dependencies datasource='federated.08op10u1915eay1cpncj21cpjrhu'>
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]'>
        <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='United States 2015 Summary'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleansed_Health Insurance Coverage' name='federated.08op10u1915eay1cpncj21cpjrhu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08op10u1915eay1cpncj21cpjrhu'>
            <column datatype='integer' name='[Employer Health Insurance Coverage (2015)]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Uninsured Rate (2015)]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Employer Health Insurance Coverage (2015)]' derivation='Sum' name='[sum:Employer Health Insurance Coverage (2015):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Uninsured Rate (2015)]' derivation='Sum' name='[sum:Uninsured Rate (2015):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Longitude (generated)]' field-type='quantitative' max='-7516380.5960138403' min='-14485743.375649743' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Latitude (generated)]' field-type='quantitative' max='6331432.8549562367' min='2209129.106757042' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' value='false' />
            <format attr='break-on-special' field='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' />
              <size column='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' />
              <text column='[federated.08op10u1915eay1cpncj21cpjrhu].[sum:Employer Health Insurance Coverage (2015):qk]' />
              <lod column='[federated.08op10u1915eay1cpncj21cpjrhu].[sum:Employer Health Insurance Coverage (2015):qk]' />
              <lod column='[federated.08op10u1915eay1cpncj21cpjrhu].[sum:Uninsured Rate (2015):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08op10u1915eay1cpncj21cpjrhu].[Latitude (generated)]</rows>
        <cols>[federated.08op10u1915eay1cpncj21cpjrhu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8B2CC70D-6405-49D3-9BEA-1CF88125539C}' />
    </worksheet>
    <worksheet name='United States 2016 Summary'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cleansed_Health Insurance Coverage' name='federated.08op10u1915eay1cpncj21cpjrhu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08op10u1915eay1cpncj21cpjrhu'>
            <column datatype='real' name='[Average Monthly Tax Credit (2016)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Marketplace Tax Credits (2016)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Medicaid Enrollment (2016)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Medicare Enrollment (2016)]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average Monthly Tax Credit (2016)]' derivation='Sum' name='[sum:Average Monthly Tax Credit (2016):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marketplace Tax Credits (2016)]' derivation='Sum' name='[sum:Marketplace Tax Credits (2016):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medicaid Enrollment (2016)]' derivation='Sum' name='[sum:Medicaid Enrollment (2016):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medicare Enrollment (2016)]' derivation='Sum' name='[sum:Medicare Enrollment (2016):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Longitude (generated)]' field-type='quantitative' max='-7570371.698135471' min='-14109295.261360111' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Latitude (generated)]' field-type='quantitative' max='7154165.1322903894' min='1751034.8898548495' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' value='false' />
            <format attr='break-on-special' field='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.08op10u1915eay1cpncj21cpjrhu].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' />
              <size column='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' />
              <text column='[federated.08op10u1915eay1cpncj21cpjrhu].[sum:Medicare Enrollment (2016):qk]' />
              <lod column='[federated.08op10u1915eay1cpncj21cpjrhu].[sum:Medicare Enrollment (2016):qk]' />
              <lod column='[federated.08op10u1915eay1cpncj21cpjrhu].[sum:Average Monthly Tax Credit (2016):qk]' />
              <lod column='[federated.08op10u1915eay1cpncj21cpjrhu].[sum:Medicaid Enrollment (2016):qk]' />
              <lod column='[federated.08op10u1915eay1cpncj21cpjrhu].[sum:Marketplace Tax Credits (2016):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08op10u1915eay1cpncj21cpjrhu].[Latitude (generated)]</rows>
        <cols>[federated.08op10u1915eay1cpncj21cpjrhu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B5DA9A80-1834-46B4-93C3-8B0B406A810F}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='United States 2015 Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{DB4EA0A3-A634-468D-A510-926A73FB8D07}' />
    </window>
    <window class='worksheet' name='United States 2016 Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08op10u1915eay1cpncj21cpjrhu].[none:State Medicaid Expansion (2016):nk]</field>
            <field>[federated.08op10u1915eay1cpncj21cpjrhu].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9CF3F59D-C445-450B-8707-4BC53727752E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='United States 2015 Summary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='United States 2016 Summary' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
